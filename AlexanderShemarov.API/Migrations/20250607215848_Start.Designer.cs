// <auto-generated />
using AlexanderShemarov.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlexanderShemarov.API.Migrations
{
    [DbContext(typeof(TrainsApiDbContext))]
    [Migration("20250607215848_Start")]
    partial class Start
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.16");

            modelBuilder.Entity("AlexanderShemarov.Domain.Entities.TrainTypes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("TrainTypesAPI");
                });

            modelBuilder.Entity("AlexanderShemarov.Domain.Entities.Trains", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrainTypesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TrainTypesId");

                    b.ToTable("TrainsAPI");
                });

            modelBuilder.Entity("AlexanderShemarov.Domain.Entities.Trains", b =>
                {
                    b.HasOne("AlexanderShemarov.Domain.Entities.TrainTypes", "TrainTypes")
                        .WithMany()
                        .HasForeignKey("TrainTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
