@using AlexanderShemarov.Domain.Models
@model ListModel<Trains>

@{
    ViewData["Title"] = "Index";
    var request = ViewContext.HttpContext.Request;
    var returnUrl = request.Path + request.QueryString.ToUriComponent();

    var trainTypes = ViewData["trainTypes"] as IEnumerable<TrainTypes>;

    string? trainType = request.RouteValues["trainTypes"]?.ToString();
    int prev = Model.CurrentPage == 1 ? 1 : Model.CurrentPage - 1;
    int next = Model.CurrentPage == Model.TotalPages ? Model.TotalPages : Model.CurrentPage + 1;
}

<h2 class="m-3">Цягнікі</h2>

@* <p>
    <a asp-action="Create">Create New</a>
</p> *@

@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Speed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cost)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TrainTypesId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Speed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cost)
            </td>
            <td> *@
                @* @Html.DisplayFor(modelItem => item.Image) *@
                @* <img src="@item.Image" height="100" width="130" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TrainTypesId)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table> *@

<div class="row">
    <!--Dropdown Menu-->
    <div class="col-2 border-2">
        <ul class="nav ">
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" 
                   data-bs-toggle="dropdown" 
                   href="#" 
                   role="button" 
                   aria-expanded="false"
                >
                    @ViewData["currentTrainType"]
                </a>
                <ul class="dropdown-menu">
                    <li>
                        <a class="dropdown-item" 
                           asp-controller="product" 
                           asp-route-trainType=@null
                        >All</a>
                    </li>
                    @foreach (var item in trainTypes)
                    {
                        <li>
                            <a class="dropdown-item" 
                                asp-controller="product"
                                asp-route-trainType="@item.NormalizedName">
                                @item.Name
                            </a>
                        </li>
                    }
                </ul>
            </li> 
        </ul>
    </div>
    <!---->
</div>

@if (Model != null)
{
    <div class="card-group">
        @foreach (var item in Model.Items)
        {
            @* <partial name="_TrainItemPartial" model="@item" /> *@
            @await Html.PartialAsync("_TrainItemPartial", @item)
        }
    </div>

    @* <!-- Pager -->
    <div class="row">
        <nav aria-label="Trains pages navigation">
            <ul class="pagination">
                <li class="page-item
                @(prev == Model.CurrentPage ? "disabled" : "")">
                    <a class="page-link "
                       asp-controller="Product"
                       asp-action="Index"
                       asp-route-pageno="@prev"
                       asp-route-category="@trainType"
                       aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item
                    @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link"
                           asp-controller="Product"
                           asp-action="Index"
                           asp-route-pageno="@i"
                           asp-route-category="@trainType">
                            @i
                        </a>
                    </li>
                }
                <li class="page-item
                    @(next == Model.CurrentPage ? "disabled" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-pageno="@next"
                       asp-route-category="@trainType"
                       aria-label="Next"
                    >
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
    <!-- Pager --> *@

    <!-- Pager's Tag-Helper -->
    <pager current-page="@Model.CurrentPage"
        total-pages="@Model.TotalPages"
        train-type="@trainType"
    ></pager>
    <!---->
}

<h2 class="text-warning">@ViewData["Error"]</h2>
